<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net5.0</TargetFramework>
		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<IsPackable>false</IsPackable>
		<SpaRoot>ClientApp\</SpaRoot>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
		<UserSecretsId>c377a527-1bee-4935-bd2e-5efd86f60871</UserSecretsId>
		<AspNetCoreHostingModel>OutOfProcess</AspNetCoreHostingModel>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.1.0" />
		<PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="9.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="5.0.2" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.1" />
		<PackageReference Include="Microsoft.AspNetCore.ApiAuthorization.IdentityServer" Version="5.0.1" />
		<PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="5.0.1" />
		<PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="5.0.1" />
		<PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="5.0.1" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="5.0.1" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="5.0.1" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="5.0.1" />
		<PackageReference Include="Serilog.AspNetCore" Version="4.1.0" />
		<PackageReference Include="Serilog.Sinks.Console" Version="3.1.1" />
		<PackageReference Include="Serilog.Sinks.File" Version="4.1.0" />
		<PackageReference Include="Swashbuckle.AspNetCore" Version="6.1.4" />
	</ItemGroup>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Compile Remove="ClientApp\.vscode\**" />
		<Compile Remove="ClientApp\build\**" />
		<Compile Remove="logs\**" />
		<Compile Remove="Utilities\**" />
		<Compile Remove="wwwroot\files\**" />
		<Compile Remove="wwwroot\user-content\**" />
		<Content Remove="$(SpaRoot)**" />
		<Content Remove="ClientApp\.vscode\**" />
		<Content Remove="ClientApp\build\**" />
		<Content Remove="logs\**" />
		<Content Remove="Utilities\**" />
		<Content Remove="wwwroot\files\**" />
		<Content Remove="wwwroot\user-content\**" />
		<EmbeddedResource Remove="ClientApp\.vscode\**" />
		<EmbeddedResource Remove="ClientApp\build\**" />
		<EmbeddedResource Remove="logs\**" />
		<EmbeddedResource Remove="Utilities\**" />
		<EmbeddedResource Remove="wwwroot\files\**" />
		<EmbeddedResource Remove="wwwroot\user-content\**" />
		<None Remove="$(SpaRoot)**" />
		<None Remove="ClientApp\.vscode\**" />
		<None Remove="ClientApp\build\**" />
		<None Remove="logs\**" />
		<None Remove="Utilities\**" />
		<None Remove="wwwroot\files\**" />
		<None Remove="wwwroot\user-content\**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<ItemGroup>
	  <Content Include="ClientApp\public\images\bg\1.jpg">
	    <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
	    <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
	  </Content>
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\Academy\Academy.csproj" />
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)build\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

</Project>
